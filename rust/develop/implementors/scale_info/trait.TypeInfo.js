(function() {var implementors = {
"pallet_liberland_initializer":[["impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_liberland_initializer/pallet/trait.Config.html\" title=\"trait pallet_liberland_initializer::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_liberland_initializer/pallet/enum.Call.html\" title=\"enum pallet_liberland_initializer::pallet::Call\">Call</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_liberland_initializer/pallet/trait.Config.html\" title=\"trait pallet_liberland_initializer::pallet::Config\">Config</a> + 'static,</span>"]],
"pallet_liberland_legislation":[["impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_liberland_legislation/pallet/trait.Config.html\" title=\"trait pallet_liberland_legislation::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_liberland_legislation/pallet/enum.Event.html\" title=\"enum pallet_liberland_legislation::pallet::Event\">Event</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_liberland_legislation/pallet/trait.Config.html\" title=\"trait pallet_liberland_legislation::pallet::Config\">Config</a> + 'static,</span>"],["impl&lt;T&gt; TypeInfo for <a class=\"enum\" href=\"pallet_liberland_legislation/pallet/enum.Error.html\" title=\"enum pallet_liberland_legislation::pallet::Error\">Error</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'static,</span>"],["impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_liberland_legislation/pallet/trait.Config.html\" title=\"trait pallet_liberland_legislation::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_liberland_legislation/pallet/enum.Call.html\" title=\"enum pallet_liberland_legislation::pallet::Call\">Call</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_liberland_legislation/pallet/trait.Config.html\" title=\"trait pallet_liberland_legislation::pallet::Config\">Config</a> + 'static,</span>"]],
"pallet_llm":[["impl&lt;T&gt; TypeInfo for <a class=\"enum\" href=\"pallet_llm/pallet/enum.Error.html\" title=\"enum pallet_llm::pallet::Error\">Error</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'static,</span>"],["impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_llm/pallet/trait.Config.html\" title=\"trait pallet_llm::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_llm/pallet/enum.Event.html\" title=\"enum pallet_llm::pallet::Event\">Event</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_llm/pallet/trait.Config.html\" title=\"trait pallet_llm::pallet::Config\">Config</a> + 'static,</span>"],["impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_llm/pallet/trait.Config.html\" title=\"trait pallet_llm::pallet::Config\">Config</a>&gt; TypeInfo for <a class=\"enum\" href=\"pallet_llm/pallet/enum.Call.html\" title=\"enum pallet_llm::pallet::Call\">Call</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T,)</a>&gt;: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: TypeInfo + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_llm/pallet/trait.Config.html\" title=\"trait pallet_llm::pallet::Config\">Config</a> + 'static,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()